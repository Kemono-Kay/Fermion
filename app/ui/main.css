/** Specify fallback emoji font **/

@font-face {
  font-family: "Noto Color Emoji";
  src: url("../lib/noto/NotoColorEmoji.ttf");
}

button, body {
  font-family: Helvetica, Arial, 'Fermion User Theme Emoji', 'Noto Color Emoji', sans-serif;
}

/** Always hide hidden elements and unhandled icons **/

*[hidden] {
  display: none !important;
}

.UnhandledIcon {
  visibility: hidden;
}

/** Give unhandled icons a default appearance **/

.UnhandledIcon::after {
  content: '\fffd';
  visibility: visible;
  display: inline-block;
  width: 1em;
  overflow: hidden;
  line-height: 100%;
}
}

/** Default styles **/

body {
  margin: 0;
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.Titlebar.Main {
  user-select: none;
  -webkit-app-region: drag;
  width: 100%;
  display: flex;
  justify-content: space-between;
  white-space: nowrap;
}

.Titlebar.Handle {
  flex-grow: 1;
  color: var(--fermion-title-text);
}

.Titlebar.Button {
  -webkit-app-region: no-drag;
  color: var(--fermion-title-button-text);
}

.Titlebar.Button:hover {
  background: var(--fermion-title-button-hover);
}

.Titlebar.Button.Close:hover {
  background: var(--fermion-title-close-hover);
}

.Titlebar.Handle > *:first-child {
  display: inline-block;
  transform: rotate(180deg);
}

.Layout.Main {
  flex-grow:1;
  display: grid;
}

/** Ensure that minimize and maximize and close have a default style so that they'll always get handled. **/

.Titlebar.Button.Minimize .UnhandledIcon {
  --fermion-icon-style: far;
  --fermion-icon: window-minimize;
}

.Titlebar.Button.Maximize .UnhandledIcon {
  --fermion-icon-style: far;
  --fermion-icon: window-maximize;
}

.Titlebar.Button.Restore .UnhandledIcon {
  --fermion-icon-style: far;
  --fermion-icon: window-restore;
}

.Titlebar.Button.Close .UnhandledIcon {
  --fermion-icon-style: far;
  --fermion-icon: window-close;
}